vec_a <- c(1:5, 1:1)
vec_a <- array(1:9, c(3, 3))
vec_a
t(vec_a)
vec_a <- t(vec_a)
vec_a
length(vec_a)
nrow(vec_a)
ncol(vec_a)
apopros("vec_a")
aporos("vec_a")
apropros("vec_a")
apropos("vec_a")
apropos("vec")
shape(vec_a)
dim(vec_a)
vec_a %*% solve(vec_a)
solve(vec_a)
solve(vec_a + 1)
solve(vec_a + 1 -2)
solve(vec_a[1])
within(vec_a)
within(vec_a, x < 5)
mat_a <- matrix(vec_a)
mat_a <- matrix(vec_a, nrow = 3,ncol=3)
mat_a
class(mat_a
)
install.packages('stringi')
install.packages('languageserver')
install.packages('languageserver')
setwd("~/ducscode/YearIII/SemesterVI/MachineLearning/Other/R")
library(caret)
library(e1071)
library(caTools)
set.seed(20)
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
df
head(df)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(play ~ ., data = train_nb)
model_nb <- naiveBayes(as.factor(Survived) ~ .,train_nb)
model_nb
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
head(df)
summary(model_nb)
y_pred <- predict(model_nb, test_nb)
summary(y_pred)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
summary(y_pred)
cm <- table(test_nb$Survived, y_pred)
confusionMatrix(cm)
library(caret)
library(e1071)
library(caTools)
set.seed(20)
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
head(df)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
cm <- table(test_nb$Survived, y_pred)
confusionMatrix(cm)
df <- df[c('Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare')]
is.na(df).sum()
is.na(df)
df.fillna()
which(is.na(df))
which(is.na(df), arr.ind = TRUE)
colSums(is.na(df))
colSums(is.na(df))
df$Age[is.na(df$Age)] <- mean(df$Age)
colSums(is.na(df))
df$Age[is.na(df$Age)]
is.na(df$Age)
df$Age[-3]
df$Age[is.na(df$Age)]
df$Age[is.na(df$Age)] <- 0
colSums(is.na(df))
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
head(df)
df <- df[c('Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare')]
colSums(is.na(df))
df$Age[is.na(df$Age)] <- mean(df$Age, na.rm = TRUE)
colSums(is.na(df))
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
(caret)
(caret)
(caret)
(caret)
(caret)
library(caret)
library(e1071)
library(caTools)
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
head(df)
df <- df[c('Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Survived')]
colSums(is.na(df))
df$Age[is.na(df$Age)] <- mean(df$Age, na.rm = TRUE)
colSums(is.na(df))
head(df)
split <- sample.split(df, SplitRatio = 0.7)
df$Sex <- as.factor(Sex)
summary(df)
df$Sex <- as.factor(df$Sex)
summary(df)
summary(df)
head(df)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
cm <- table(test_nb$Survived, y_pred)
confusionMatrix(cm)
df <- df[c('Pclass', 'Sex', 'Age'. 'Fare', 'Survived')]
df <- df[c('Pclass', 'Sex', 'Age', 'Fare', 'Survived')]
colSums(is.na(df))
df$Age[is.na(df$Age)] <- mean(df$Age, na.rm = TRUE)
colSums(is.na(df))
summary(df)
df$Sex <- as.factor(df$Sex)
summary(df)
head(df)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
cm <- table(test_nb$Survived, y_pred)
confusionMatrix(cm)
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
head(df)
summary(df)
df <- df[c('Pclass', 'Sex', 'Age', 'SibSp', 'Parch', 'Fare', 'Survived')]
colSums(is.na(df))
df$Age[is.na(df$Age)] <- mean(df$Age, na.rm = TRUE)
colSums(is.na(df))
summary(df)
df$Sex <- as.factor(df$Sex)
summary(df)
head(df)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
cm <- table(test_nb$Survived, y_pred)
confusionMatrix(cm)
library(caret)
library(e1071)
library(caTools)
df <- read.csv('https://raw.githubusercontent.com/codebasics/py/master/ML/14_naive_bayes/titanic.csv')
head(df)
summary(df)
df <- df[c('Pclass', 'Sex', 'Age', 'Fare', 'Survived')]
colSums(is.na(df))
df$Age[is.na(df$Age)] <- mean(df$Age, na.rm = TRUE)
colSums(is.na(df))
summary(df)
df$Sex <- as.factor(df$Sex)
summary(df)
head(df)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(as.factor(Survived) ~ ., train_nb)
y_pred <- predict(model_nb, test_nb)
cm <- table(test_nb$Survived, y_pred)
confusionMatrix(cm)
