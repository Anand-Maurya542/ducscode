vec_a <- c(1:5, 1:1)
vec_a <- array(1:9, c(3, 3))
vec_a
t(vec_a)
vec_a <- t(vec_a)
vec_a
length(vec_a)
nrow(vec_a)
ncol(vec_a)
apopros("vec_a")
aporos("vec_a")
apropros("vec_a")
apropos("vec_a")
apropos("vec")
shape(vec_a)
dim(vec_a)
vec_a %*% solve(vec_a)
solve(vec_a)
solve(vec_a + 1)
solve(vec_a + 1 -2)
solve(vec_a[1])
within(vec_a)
within(vec_a, x < 5)
mat_a <- matrix(vec_a)
mat_a <- matrix(vec_a, nrow = 3,ncol=3)
mat_a
class(mat_a
)
install.packages('stringi')
install.packages('languageserver')
install.packages('languageserver')
setwd("~/ducscode/YearIII/SemesterVI/DataMining/Other")
setwd("~/ducscode/YearIII/SemesterVI/MachineLearning/Other")
library(data.table)
df <- fread('https://raw.githubusercontent.com/dataprofessor/data/master/weather-nominal-weka.csv')
df
library(caTools)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
train_nb <- subset(df, split == 'TRUE')
df <- read_csv('https://raw.githubusercontent.com/dataprofessor/data/master/weather-nominal-weka.csv')
df <- read.csv('https://raw.githubusercontent.com/dataprofessor/data/master/weather-nominal-weka.csv')
df
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
set.seed(20)
library(caret)
library(e1071)
model <- naiveBayes(play ~ ., data = train_nb)
model
model <- naiveBayes(play ~ ., data = df)
model
predict(model, newdata = c('sunny','cool','high','TRUE'))
rbind(df,c('sunny','cool','high','TRUE'))[,-1]
rbind(df,c('sunny','cool','high','TRUE'))[,1]
rbind(df,c('sunny','cool','high','TRUE'))[1:]
rbind(df,c('sunny','cool','high','TRUE'))
rbind(df,c('sunny','cool','high','TRUE',NA))
df_1 <- rbind(df,c('sunny','cool','high','TRUE',NA))
df_1[is.element(df_1$play, NA),]
df_1 <- rbind(df,c('sunny','cool','high','TRUE',NA))
predict(model, newdata = df_1[is.element(df_1$play, NA),])
model_nb <- naiveBayes(play ~ ., data = df)
library(caTools)
split <- sample.split(df, SplitRatio = 0.7)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(play ~ ., data = train_nb)
model_nb
play_pred <- predict(model_nb, newdata = train_nb)
cm <- table(train_nb$play, play_pred)
cm
confusionMatrix(cm)
split <- sample.split(df, SplitRatio = 0.9)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(play ~ ., data = train_nb)
model_nb
play_pred <- predict(model_nb, newdata = train_nb)
cm <- table(train_nb$play, play_pred)
cm
confusionMatrix(cm)
split <- sample.split(df, SplitRatio = 0.8)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(play ~ ., data = train_nb)
model_nb
play_pred <- predict(model_nb, newdata = train_nb)
cm <- table(train_nb$play, play_pred)
cm
confusionMatrix(cm)
split <- sample.split(df, SplitRatio = 0.6)
train_nb <- subset(df, split == TRUE)
test_nb <- subset(df, split == FALSE)
model_nb <- naiveBayes(play ~ ., data = train_nb)
model_nb
play_pred <- predict(model_nb, newdata = train_nb)
cm <- table(train_nb$play, play_pred)
cm
confusionMatrix(cm)
source("~/ducscode/YearIII/SemesterVI/MachineLearning/Other/NaiveBayes.R")
source("~/ducscode/YearIII/SemesterVI/MachineLearning/Other/NaiveBayes.R")
source("~/ducscode/YearIII/SemesterVI/MachineLearning/Other/NaiveBayes.R", echo=TRUE)
