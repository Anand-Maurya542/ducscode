<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE Machine [
<!ELEMENT Machine (PunctChar*, Field*, FileChannel*, Register*, RegisterArray*, ConditionBit*, RAM*, Set*, Test*, Increment*, Shift*, Logical*, Arithmetic*, Branch*, TransferRtoR*, TransferRtoA*, TransferAtoR*, Decode*, SetCondBit*, IO*, MemoryAccess*, End, Comment*, EQU*, FetchSequence, MachineInstruction*, HighlightingInfo?, LoadingInfo?, IndexingInfo?, ProgramCounterInfo?, ModuleWindowsInfo?) >
<!ATTLIST Machine name CDATA "unnamed">
<!ELEMENT PunctChar EMPTY>
<!ATTLIST PunctChar char CDATA #REQUIRED use  (symbol|token|label|comment|pseudo|illegal) #REQUIRED>
<!ELEMENT Field (FieldValue*)>
<!ATTLIST Field name CDATA #REQUIRED type  (required|optional|ignored) #REQUIRED numBits CDATA #REQUIRED relativity (absolute|pcRelativePreIncr|pcRelativePostIncr) #REQUIRED defaultValue CDATA #REQUIRED signed (true|false) #REQUIRED id ID #REQUIRED>
<!ELEMENT FieldValue EMPTY>
<!ATTLIST FieldValue name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT FileChannel EMPTY>
<!ATTLIST FileChannel file CDATA #REQUIRED id CDATA #REQUIRED>
<!ELEMENT Register EMPTY>
<!ATTLIST Register name CDATA #REQUIRED width CDATA #REQUIRED initialValue CDATA #REQUIRED readOnly (true|false) "false" id ID #REQUIRED>
<!ELEMENT RegisterArray (Register+)>
<!ATTLIST RegisterArray name CDATA #REQUIRED width CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT ConditionBit EMPTY>
<!ATTLIST ConditionBit name CDATA #REQUIRED bit CDATA #REQUIRED register IDREF #REQUIRED halt (true|false) "false" id ID #REQUIRED>
<!ELEMENT RAM EMPTY>
<!ATTLIST RAM name CDATA #REQUIRED length CDATA #REQUIRED id ID #REQUIRED cellSize CDATA "8">
<!ELEMENT Increment EMPTY>
<!ATTLIST Increment name CDATA #REQUIRED register IDREF #REQUIRED overflowBit IDREF #IMPLIED carryBit IDREF #IMPLIED delta CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Arithmetic EMPTY>
<!ATTLIST Arithmetic name CDATA #REQUIRED type (ADD|SUBTRACT|MULTIPLY|DIVIDE) #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED overflowBit IDREF #IMPLIED  carryBit IDREF #IMPLIED  id ID #REQUIRED>
<!ELEMENT TransferRtoR EMPTY>
<!ATTLIST TransferRtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT TransferRtoA EMPTY>
<!ATTLIST TransferRtoA name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT TransferAtoR EMPTY>
<!ATTLIST TransferAtoR name CDATA #REQUIRED source IDREF #REQUIRED srcStartBit CDATA #REQUIRED dest IDREF #REQUIRED destStartBit CDATA #REQUIRED numBits CDATA #REQUIRED index IDREF #REQUIRED indexStart CDATA #IMPLIED indexNumBits CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT Shift EMPTY>
<!ATTLIST Shift name CDATA #REQUIRED source IDREF #REQUIRED destination IDREF #REQUIRED type (logical | arithmetic | cyclic) #REQUIRED direction (right | left) #REQUIRED distance CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Branch EMPTY>
<!ATTLIST Branch name CDATA #REQUIRED amount CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Logical EMPTY>
<!ATTLIST Logical name CDATA #REQUIRED source1 IDREF #REQUIRED source2 IDREF #REQUIRED destination IDREF #REQUIRED type (AND | OR | NAND | NOR | XOR | NOT) #REQUIRED id ID #REQUIRED>
<!ELEMENT Set EMPTY>
<!ATTLIST Set name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED value CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Test EMPTY >
<!ATTLIST Test name CDATA #REQUIRED register IDREF #REQUIRED start CDATA #REQUIRED numBits CDATA #REQUIRED comparison (EQ | NE | LT | GT | LE | GE ) #REQUIRED value CDATA #REQUIRED omission CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Decode EMPTY >
<!ATTLIST Decode name CDATA #REQUIRED ir IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT IO EMPTY >
<!ATTLIST IO name CDATA #REQUIRED direction (input | output) #REQUIRED type (integer | ascii | unicode) #REQUIRED buffer IDREF #REQUIRED connection CDATA #IMPLIED id ID #REQUIRED>
<!ELEMENT MemoryAccess EMPTY >
<!ATTLIST MemoryAccess name CDATA #REQUIRED direction (read | write ) #REQUIRED memory IDREF #REQUIRED data IDREF #REQUIRED address IDREF #REQUIRED id ID #REQUIRED>
<!ELEMENT SetCondBit EMPTY >
<!ATTLIST SetCondBit name CDATA #REQUIRED bit IDREF #REQUIRED value (0 | 1) #REQUIRED id ID #REQUIRED>
<!ELEMENT End EMPTY>
<!ATTLIST End id ID #REQUIRED>
<!ELEMENT Comment EMPTY>
<!ATTLIST Comment name CDATA #REQUIRED id ID #REQUIRED>
<!ELEMENT Microinstruction EMPTY>
<!ATTLIST Microinstruction microRef IDREF #REQUIRED>
<!ELEMENT MachineInstruction (Microinstruction*)>
<!ATTLIST MachineInstruction name CDATA #REQUIRED opcode CDATA #REQUIRED instructionFormat CDATA #REQUIRED assemblyFormat CDATA #REQUIRED instructionColors CDATA #REQUIRED assemblyColors CDATA #REQUIRED>
<!ELEMENT FetchSequence (Microinstruction*) >
<!ELEMENT EQU EMPTY>
<!ATTLIST EQU name CDATA #REQUIRED value CDATA #REQUIRED>
<!ELEMENT HighlightingInfo (RegisterRAMPair*)>
<!ELEMENT RegisterRAMPair EMPTY>
<!ATTLIST RegisterRAMPair register IDREF #REQUIRED ram IDREF #REQUIRED dynamic (true|false) #REQUIRED>
<!ELEMENT LoadingInfo EMPTY>
<!ATTLIST LoadingInfo ram IDREF #IMPLIED startingAddress CDATA "0">
<!ELEMENT IndexingInfo EMPTY>
<!ATTLIST IndexingInfo indexFromRight CDATA "false">
<!ELEMENT ProgramCounterInfo EMPTY>
<!ATTLIST ProgramCounterInfo programCounter IDREF #REQUIRED>
<!ELEMENT ModuleWindowsInfo ((RegisterWindowInfo | RegisterArrayWindowInfo | RAMWindowInfo)*) >
<!ELEMENT RegisterWindowInfo EMPTY>
<!ATTLIST RegisterWindowInfo top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode)  "Decimal">
<!ELEMENT RegisterArrayWindowInfo EMPTY>
<!ATTLIST RegisterArrayWindowInfo array IDREF #REQUIRED top CDATA "50" left CDATA "50" width CDATA "300" height CDATA "150" base (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal">
<!ELEMENT RAMWindowInfo EMPTY>
<!ATTLIST RAMWindowInfo ram IDREF #REQUIRED cellSize CDATA "1" top CDATA "50" left CDATA "50" width CDATA "450" height CDATA "450" contentsbase (Decimal|Binary|Hexadecimal|Ascii|UnsignedDec|Unicode) "Decimal" addressbase (Decimal|Binary|Hexadecimal) "Decimal">
]>

<Machine name="machineV4" >
	<!--............. Punctuation Options .............-->
	<PunctChar char="!" use="symbol" />
	<PunctChar char="#" use="symbol" />
	<PunctChar char="$" use="symbol" />
	<PunctChar char="%" use="symbol" />
	<PunctChar char="&amp;" use="symbol" />
	<PunctChar char="^" use="symbol" />
	<PunctChar char="_" use="symbol" />
	<PunctChar char="`" use="symbol" />
	<PunctChar char="*" use="symbol" />
	<PunctChar char="?" use="symbol" />
	<PunctChar char="@" use="symbol" />
	<PunctChar char="~" use="symbol" />
	<PunctChar char="+" use="symbol" />
	<PunctChar char="-" use="symbol" />
	<PunctChar char="(" use="token" />
	<PunctChar char=")" use="token" />
	<PunctChar char="," use="token" />
	<PunctChar char="/" use="token" />
	<PunctChar char="=" use="token" />
	<PunctChar char="[" use="token" />
	<PunctChar char="\" use="token" />
	<PunctChar char="]" use="token" />
	<PunctChar char="{" use="token" />
	<PunctChar char="|" use="token" />
	<PunctChar char="}" use="token" />
	<PunctChar char="." use="pseudo" />
	<PunctChar char=":" use="label" />
	<PunctChar char=";" use="comment" />

	<!--......... machine instruction fields ............-->
	<Field name="address" type="required" numBits="12" relativity="absolute" signed="true" defaultValue="0" id="model.Field32ca4f24">
	</Field>
	<Field name="opcode" type="required" numBits="4" relativity="absolute" signed="true" defaultValue="0" id="model.Field39a1c13b">
	</Field>
	<Field name="operation" type="required" numBits="16" relativity="absolute" signed="true" defaultValue="0" id="model.Field1bba094b">
	</Field>

	<!--............. FileChannels .................-->
	<!-- none -->

	<!--............. registers .....................-->
	<Register name="e" width="1" initialValue="0" readOnly="false" id="model.module.Register2cf0f204" />
	<Register name="fgi" width="1" initialValue="0" readOnly="false" id="model.module.Register258a0a80" />
	<Register name="fgo" width="1" initialValue="0" readOnly="false" id="model.module.Register520ff0e2" />
	<Register name="i" width="1" initialValue="0" readOnly="false" id="model.module.Register6f86a9b3" />
	<Register name="s" width="1" initialValue="0" readOnly="false" id="model.module.Register6d3247ff" />
	<Register name="inpr" width="8" initialValue="0" readOnly="false" id="model.module.Register444d1695" />
	<Register name="outr" width="8" initialValue="0" readOnly="true" id="model.module.Register46d24da2" />
	<Register name="ar" width="12" initialValue="0" readOnly="false" id="model.module.Register5054f4df" />
	<Register name="pc" width="12" initialValue="0" readOnly="false" id="model.module.Register6a871253" />
	<Register name="ac" width="16" initialValue="0" readOnly="false" id="model.module.Register30072e94" />
	<Register name="dr" width="16" initialValue="0" readOnly="false" id="model.module.Register674b5ff7" />
	<Register name="ir" width="16" initialValue="0" readOnly="false" id="model.module.Register31e6da96" />
	<Register name="tr" width="16" initialValue="0" readOnly="false" id="model.module.Register6cd5d815" />

	<!--............. register arrays ...............-->
	<!-- none -->

	<!--............. condition bits ................-->
	<ConditionBit name="halt" bit="0" register="model.module.Register6d3247ff" halt="true" id="model.module.ConditionBit383e3770" />

	<!--............. rams ..........................-->
	<RAM name="main" length="4096" cellSize="16" id="model.module.RAM6a79afae" />

	<!--............. set ...........................-->
	<!-- none -->

	<!--............. test ..........................-->
	<!-- none -->

	<!--............. increment .....................-->
	<!-- none -->

	<!--............. shift .........................-->
	<!-- none -->

	<!--............. logical .......................-->
	<!-- none -->

	<!--............. arithmetic ....................-->
	<!-- none -->

	<!--............. branch ........................-->
	<!-- none -->

	<!--............. transferRtoR ..................-->
	<!-- none -->

	<!--............. transferRtoA ..................-->
	<!-- none -->

	<!--............. transferAtoR ..................-->
	<!-- none -->

	<!--............. decode ........................-->
	<!-- none -->

	<!--............. set condition bit .............-->
	<!-- none -->

	<!--............. io ............................-->
	<!-- none -->

	<!--............. memory access .................-->
	<!-- none -->

	<!--............. end ...........................-->
	<End id="model.microinstruction.End150b10a1" />

	<!--............. comment ...........................-->
	<!-- none -->

	<!--............. global equs ..................-->
	<!-- none -->

	<!--............. fetch sequence ................-->
	<FetchSequence>
	</FetchSequence>

	<!--............. machine instructions ..........-->

	<MachineInstruction name="iof" opcode="f040" instructionFormat="operation" assemblyFormat="operation" instructionColors="#fdd6d0" assemblyColors="#fdd6d0" >
	</MachineInstruction>

	<MachineInstruction name="ion" opcode="f080" instructionFormat="operation" assemblyFormat="operation" instructionColors="#a7c0d7" assemblyColors="#a7c0d7" >
	</MachineInstruction>

	<MachineInstruction name="sko" opcode="f100" instructionFormat="operation" assemblyFormat="operation" instructionColors="#c2a492" assemblyColors="#c2a492" >
	</MachineInstruction>

	<MachineInstruction name="ski" opcode="f200" instructionFormat="operation" assemblyFormat="operation" instructionColors="#85dcfd" assemblyColors="#85dcfd" >
	</MachineInstruction>

	<MachineInstruction name="out" opcode="f400" instructionFormat="operation" assemblyFormat="operation" instructionColors="#b995df" assemblyColors="#b995df" >
	</MachineInstruction>

	<MachineInstruction name="inp" opcode="f800" instructionFormat="operation" assemblyFormat="operation" instructionColors="#e0bbb4" assemblyColors="#e0bbb4" >
	</MachineInstruction>

	<MachineInstruction name="isz_i" opcode="e" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#b4d8ab #d7a3ec" assemblyColors="#b4d8ab #d7a3ec" >
	</MachineInstruction>

	<MachineInstruction name="bsa_i" opcode="d" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#ad92e3 #8eca9d" assemblyColors="#ad92e3 #8eca9d" >
	</MachineInstruction>

	<MachineInstruction name="bun_i" opcode="c" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#99829e #b7badc" assemblyColors="#99829e #b7badc" >
	</MachineInstruction>

	<MachineInstruction name="sta_i" opcode="b" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#b9a4fd #f797b5" assemblyColors="#b9a4fd #f797b5" >
	</MachineInstruction>

	<MachineInstruction name="lda_i" opcode="a" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#fdd1af #c6f2f4" assemblyColors="#fdd1af #c6f2f4" >
	</MachineInstruction>

	<MachineInstruction name="add_i" opcode="9" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#e3e0ad #9badb1" assemblyColors="#e3e0ad #9badb1" >
	</MachineInstruction>

	<MachineInstruction name="and_i" opcode="8" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#909a97 #f7de88" assemblyColors="#909a97 #f7de88" >
	</MachineInstruction>

	<MachineInstruction name="isz" opcode="6" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#daa5c1 #f0f3a0" assemblyColors="#daa5c1 #f0f3a0" >
	</MachineInstruction>

	<MachineInstruction name="bsa" opcode="5" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#a6c69b #cb8eb4" assemblyColors="#a6c69b #cb8eb4" >
	</MachineInstruction>

	<MachineInstruction name="bun" opcode="4" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#aff99c #c5e1bf" assemblyColors="#aff99c #c5e1bf" >
	</MachineInstruction>

	<MachineInstruction name="sta" opcode="3" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#d7d980 #ac9ff5" assemblyColors="#d7d980 #ac9ff5" >
	</MachineInstruction>

	<MachineInstruction name="lda" opcode="2" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#cfb3f6 #ecb99e" assemblyColors="#cfb3f6 #ecb99e" >
	</MachineInstruction>

	<MachineInstruction name="add" opcode="1" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#c0b4cd #e6ef94" assemblyColors="#c0b4cd #e6ef94" >
	</MachineInstruction>

	<MachineInstruction name="and" opcode="0" instructionFormat="opcode address" assemblyFormat="opcode address" instructionColors="#b286eb #a5a583" assemblyColors="#b286eb #a5a583" >
	</MachineInstruction>

	<MachineInstruction name="hlt" opcode="7001" instructionFormat="operation" assemblyFormat="operation" instructionColors="#97a1ee" assemblyColors="#97a1ee" >
	</MachineInstruction>

	<MachineInstruction name="sze" opcode="7002" instructionFormat="operation" assemblyFormat="operation" instructionColors="#e2fbad" assemblyColors="#e2fbad" >
	</MachineInstruction>

	<MachineInstruction name="sza" opcode="7004" instructionFormat="operation" assemblyFormat="operation" instructionColors="#e3b4e3" assemblyColors="#e3b4e3" >
	</MachineInstruction>

	<MachineInstruction name="sna" opcode="7008" instructionFormat="operation" assemblyFormat="operation" instructionColors="#b6a1e1" assemblyColors="#b6a1e1" >
	</MachineInstruction>

	<MachineInstruction name="spa" opcode="7010" instructionFormat="operation" assemblyFormat="operation" instructionColors="#b9c9b7" assemblyColors="#b9c9b7" >
	</MachineInstruction>

	<MachineInstruction name="inc" opcode="7020" instructionFormat="operation" assemblyFormat="operation" instructionColors="#bac990 #c5d39c" assemblyColors="#bac990 #c5d39c" >
	</MachineInstruction>

	<MachineInstruction name="cil" opcode="7040" instructionFormat="operation" assemblyFormat="operation" instructionColors="#d08589 #fbad80" assemblyColors="#d08589 #fbad80" >
	</MachineInstruction>

	<MachineInstruction name="cir" opcode="7080" instructionFormat="operation" assemblyFormat="operation" instructionColors="#c9dc9c #838788" assemblyColors="#c9dc9c #838788" >
	</MachineInstruction>

	<MachineInstruction name="cme" opcode="7100" instructionFormat="operation" assemblyFormat="operation" instructionColors="#8190fd #dfef94" assemblyColors="#8190fd #dfef94" >
	</MachineInstruction>

	<MachineInstruction name="cma" opcode="7200" instructionFormat="operation" assemblyFormat="operation" instructionColors="#c38082 #90e6f5" assemblyColors="#c38082 #90e6f5" >
	</MachineInstruction>

	<MachineInstruction name="cle" opcode="7400" instructionFormat="operation" assemblyFormat="operation" instructionColors="#f5ae80 #d5e584" assemblyColors="#f5ae80 #d5e584" >
	</MachineInstruction>

	<MachineInstruction name="cla" opcode="7800" instructionFormat="operation" assemblyFormat="operation" instructionColors="#b9e797 #e7a8f6" assemblyColors="#b9e797 #e7a8f6" >
	</MachineInstruction>

	<!--............. highlighting info .............-->
	<HighlightingInfo>
	</HighlightingInfo>

	<!--............. loading info ..................-->
	<LoadingInfo ram="model.module.RAM6a79afae" startingAddress="0" />

	<!--............. indexing info ............-->
	<IndexingInfo indexFromRight="true" />

	<!--............. program counter info ..................-->

</Machine>
